" ============================================================================
" Editor Settings
" ============================================================================
set ReplaceWithRegister "gr or grr"
set NERDTree
set commentary
set surround
set exchange
set ideajoin
set easymotion
set functiontextobj
set incsearch
set argtextobj
set mu
let g:argtextobj_pairs="(:),{:},<:>,[:]"
set clipboard=unnamed

" let mapleader = "," "Sets spacebar as leader


" nnoremap cow :action EditorToggleUseSoftWraps<CR>



" ============================================================================
" MATCHES VIM
" ============================================================================

set visualbell
set scrolloff=5                "Keep a few lines always visable
set wildmenu                   "Commandline autocomplete view"
set number                     "Show line numbers.
set cursorline                 "Show the cursor line so its it's easier to find - SEE LEADER KEY TO TOGGLE

" Apply code action to the selected region / under cursor
map <space>a :action ShowIntentionActions<cr>

" Delete marks easier (Vim does this with a plugin)
nnoremap dm :delmarks<space>

" clear highlighted search
noremap <space>h :set hlsearch! hlsearch?<cr>

" Get help documentation
nnoremap <silent> gh K

" Highlight last inserted text
nnoremap gV `[v`]

" GoTo code navigation
" IDE: gd - GotoDefinition already set by default
nmap <silent>gy :action GotoTypeDeclaration<cr>

" Jump to last change
" nnoremap g; :action JumpToLastChange<cr>

" Jump to previous change
nnoremap g, :action JumpToLastChange<cr>

" show outline popup
nnoremap <space>o :action FileStructurePopup<cr>

" Apply code action to the selected region / under cursor
map <space>nt :NERDTreeToggle<cr>
map <space>nf :NERDTreeFocus<cr>

" Go rename symbol
nnoremap <space>rn :action RenameElement<cr>

" Show all problems/diagnostics.
nnoremap <space>sp :action ActivateProblemsViewToolWindow<cr>

" Show outline window
nmap <space>so :action ActivateStructureToolWindow<cr>

" Show definition window
nmap <space>sd :action QuickTypeDefinition<cr>

nmap <space>su :action FindUsages<cr>

" source .ideavimrc
nnoremap <space>vs :source ~/.ideavimrc<cr>
nnoremap <space>ve :e ~/.ideavimrc<cr>

" Copy until the end of the line
noremap Y y$

nnoremap zM :action CollapseAllRegions<cr>
nnoremap zR :action ExpandAllRegions<cr>

" toggle between buffers
nnoremap [b gT<cr>
nnoremap ]b gt<cr>

" Move cursor in insert mode
inoremap <c-l> <right>
inoremap <c-h> <left>

" Left / right
nnoremap <c-l> <c-w>l
nnoremap <c-j> <c-w>j
nnoremap <c-h> <c-w>h
nnoremap <c-k> <c-w>k

" make it easy to resize window width
map <space>- :action StretchSplitToLeft<cr>
map <space>= :action StretchSplitToRight<cr>

" Textmate style indentation
vmap <space>[ <gv
vmap <space>] >gv
nmap <space>[ <<
nmap <space>] >>

" ============================================================================
" DOESN'T MATCHES VIM
" ============================================================================
:set ignorecase smartcase

" Function to toggle between relative and absolute line numbers
function! ToggleLineNumbers()
  if &relativenumber
    set norelativenumber
    set number
  else
    set relativenumber
    set number
  endif
endfunction

" Key mapping to call the toggle function (e.g., <Leader>n)
nnoremap <space>n :call ToggleLineNumbers()<CR>

" Escape characters when using * in visual mode.
xnoremap * :<C-u>call <SID>VSetSearch()<CR>/<C-R>=@/<C-R><C-R>
xnoremap # :<C-u>call <SID>VSetSearch()<CR>?<C-R>=@/<C-R><C-R>

function! s:VSetSearch()
    let temp = @s
    norm! gv"sy
    let @/ = '\V' . substitute(escape(@s, '/\'), '/n', '\\n', 'g')
    let @s = temp
endfunction



"Access all tools and file tabs - must hold CTRL
"nmap <c-t> :action Switcher<CR>
nmap <c-t> :action ActivateTerminalToolWindow<CR>


" gq isn't in ideavim so this plugin works great
vnoremap gq :action com.andrewbrookins.idea.wrap.WrapAction<cr>
nnoremap gq :action com.andrewbrookins.idea.wrap.WrapParagraphAction<cr>

nnoremap <space>wu :action Unsplit<cr>
nnoremap <space>wh :action SplitHorizontally<cr>
nnoremap <space>wv :action SplitVertically<cr>
nnoremap <space>mr :action MoveTabRight<cr>
nnoremap <space>ml :action MoveTabLeft<cr>
nnoremap <space>mu :action MoveTabUp<cr>
nnoremap <space>md :action MoveTabDown<cr>
nnoremap <space>mo :action MoveEditorToOppositeTabGroup<cr>
nnoremap <space>bo :action OpenInBrowser<cr>

map <space>j <Plug>(easymotion-j)
map <space>k <Plug>(easymotion-k)
map <space>l <Plug>(easymotion-sl)
map <space>e <Plug>(easymotion-s)

nnoremap <space>sw :action JumpToLastWindow<CR>
nnoremap <space>sc :action ShowColorPicker<cr>
nnoremap <space>sf :action RecentFiles<CR>
nnoremap <space>st :action QuickEvaluateExpression<CR>
nnoremap <space>si :action QuickImplementations<CR>
nnoremap <space>bt :action ToggleLineBreakpoint<cr>
nnoremap <space>bv :action ViewBreakpoints<cr>
nnoremap <space>rm :action Refactorings.QuickListPopupAction<cr>
vmap <space>rm :action Refactorings.QuickListPopupAction<cr>
nnoremap <space>rf :action ReformatCode<cr>
nnoremap <space>rp :action ReformatWithPrettierAction<cr>
nnoremap <space>gm :action Vcs.QuickListPopupAction<cr>
nnoremap <space>gc :action Git.CompareWithBranch<cr>
vmap <space>gc :action Git.CompareWithBranch<cr>
nnoremap <space>gb :action ChooseDebugConfiguration<cr>
nnoremap ]e :action GotoNextError<cr>
nnoremap [e :action GotoPreviousError<cr>
nnoremap ]c :action VcsShowNextChangeMarker<cr>
nnoremap [c :action VcsShowPrevChangeMarker<cr>
nnoremap ]g :action NextDiff<cr>
nnoremap [g :action PreviousDiff<cr>
noremap <space>cr :action Vcs.RollbackChangedLines<cr>
noremap <space>dl :action Vcs.ShowDiffChangedLines<cr>
noremap <space>sh :action Vcs.ShowTabbedFileHistory<cr>
vmap <space>sh :action Vcs.ShowHistoryForBlock<cr>
nnoremap <space>ga :action GotoAction<cr>
vmap <space>ga :action GotoAction<cr>
" nnoremap <space>ic :action InspectCode<cr>
" nnoremap <space>ph :action ParameterNameHints<cr>

" IDE: close tool widows with <S-ESC>
" IDE: Toggle terminal                                                 : Command + 2
" IDE: Navigate termainal tabs                                         : Command + Shift + []
" IDE: Wrap selection with template : Command + w | Alt + s
" IDE: Bookmarks Window                                            : Command + 3
" IDE: Extend Selection: OPTION + ARROW
" IDE: Show all possible live templates / code snippets                :       Command + T / Command +
" IDE: Show definition :  Command + Y
" IDE: Show parameter info:  Command + p | Alt + p
" IDE: Show Type info:  CTRL + SHIFT + p
" IDE: Move terminal tabs                                             :       CNTRL + ]
" IDE: Sow function paramter info while calling a function :       Command + p
" IDE: Search Everywhere :       SHIFT + SHIFT
" IDE: Recent Files :       Command + e
" IDE: Multicursor (has intellisense) :       CTRL + G
" IDE: Add import :       OPTION + ENTER
" Hide all tool windows, also restores window                     :       Shift + Command + F12
" Expand & Close folds                                            :       Command +  ||  Command -
" New file                                                        :       Command + n
" AceJump                                                         :       Command + ;
