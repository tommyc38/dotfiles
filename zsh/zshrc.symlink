export DOTFILES=$HOME/dotfiles
export ZSH=$DOTFILES/zsh
export NVIM=$HOME/.config/nvim
export VIM_PLUGINS=$HOME/.vim/plugged
export VIM_THEME_FILE=$DOTFILES/vim/customPlugins/darcula/colors/darcula.vim
export CUSTOM_BIN=$DOTFILES/bin/
export VIRTUAL_BOXES=$HOME/boxes/

# source all .zsh files inside of the zsh/ directory
for config in $ZSH/**/*.zsh; do
  source $config
done

# check for work env file
if [[ -f ~/.work_env ]]; then
    source ~/.work_env
fi

# check for custom bin directory and add to path
if [[ -d ~/bin ]]; then
    export PATH=~/bin:$PATH
fi

# adding path directory for custom scripts
export PATH=$DOTFILES/bin:$PATH

# add /usr/local/sbin
if [[ -d /usr/local/sbin ]]; then
    export PATH=/usr/local/sbin:$PATH
fi

# homebrew software location
export PATH="/usr/local/bin:$PATH"

# allow use of corutiles without the prefix g
if [[ "$(uname)" == "Darwin" && -n "$(brew -v)" ]]; then
  export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
  export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
  export PATH="/usr/local/opt/grep/libexec/gnubin:$PATH"
  export MANPATH="/usr/local/opt/grep/libexec/gnuman:$MANPATH"
  export PATH="/usr/local/opt/gnu-indent/libexec/gnubin:$PATH"
  export MANPATH="/usr/local/opt/gnu-indent/libexec/gnuman:$MANPATH"
  export PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH"
  export MANPATH="/usr/local/opt/gnu-tar/libexec/gnuman:$MANPATH"
  export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
  export MANPATH="/usr/local/opt/gnu-sed/libexec/gnuman:$MANPATH"
  export PATH="/usr/local/opt/gnu-which/libexec/gnubin:$PATH"
  export MANPATH="/usr/local/opt/gnu-which/libexec/gnuman:$MANPATH"
  export PATH="/usr/local/opt/findutils/libexec/gnubin:$PATH"
  export MANPATH="/usr/local/opt/findutils/libexec/gnuman:$MANPATH"
  export PATH="/usr/local/opt/gnu-getopt/bin:$PATH"
  export GUILE_TLS_CERTIFICATE_DIRECTORY=/usr/local/etc/gnutls/
fi



export HOMEBREW_GITHUB_API_TOKEN=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

# make vim your default editor
export EDITOR="nvim"

# aliases for tmux
alias ta='tmux attach'
alias tls='tmux ls'
alias tat='tmux attach -t'
alias tns='tmux new-session -s'

# make output of ls color code file/dir types
alias ls="ls --color"
export LS_COLORS='or=5;31:mi=5:ow=01;91'

alias info='info --vi-keys'
#this will allow vi navigation when using the info command

# initialize autocomplete
autoload -U compinit add-zsh-hook
compinit -i

for config ($ZSH/**/*completion.sh) source $config

# THIS IS THE POST INSTALL TO ENABLE AUTOJUMP
[[ "$(uname)" == "Darwin" && -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh

if [ -z ${DOTFILES_LOADED+x} ]; then

    if [[ "$(uname)" == "Darwin" ]]; then
      # install zsh-syntax-highlighting
      source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
      # install zsh autosuggestions -(TIP -in vi mode use standard motions to expend suggestions)
      source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
    else 
      source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
      source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
    fi
fi

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh"  ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
export NVM_SYMLINK_CURRENT=true # This allows IDEs to use a single place to set your node version
autoload -U add-zsh-hook
# This will tell NVM to use whatever version is in the .nvmrc
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}

add-zsh-hook chpwd load-nvmrc

DOTFILES_LOADED=1
# change the shell login 
# example: sudo dscl . change /users/$USER UserShell /bin/bash /opt/local/bin/zsh
# http://superuser.com/questions/362372/how-to-change-the-login-shell-on-mac-os-x-from-bash-to-zsh

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/tomconley/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/tomconley/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/tomconley/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/tomconley/google-cloud-sdk/completion.zsh.inc'; fi
